# -*- coding: utf-8 -*-
# Generated by Django 1.11.12 on 2018-05-27 01:35
from __future__ import unicode_literals

import ckeditor_uploader.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0002_auto_20150616_2121'),
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True, max_length=200, null=True)),
                ('answer_date', models.DateTimeField(editable=False)),
            ],
            options={
                'verbose_name': 'resposta',
                'verbose_name_plural': 'respostas',
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='T\xedtulo do artigo')),
                ('article', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Descri\xe7\xe3o')),
                ('publ_date', models.DateTimeField(verbose_name='Data de publica\xe7\xe3o')),
                ('destaque', models.CharField(default='N\xe3o', max_length=3, verbose_name='Destacado?')),
                ('address', models.CharField(max_length=200, verbose_name='Endere\xe7o')),
                ('published', models.CharField(default='N\xe3o', max_length=3, verbose_name='Publicado?')),
            ],
            options={
                'verbose_name': 'Artigo',
                'verbose_name_plural': 'Artigos',
            },
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice_text', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'escolha',
                'verbose_name_plural': 'escolhas',
            },
        ),
        migrations.CreateModel(
            name='Etapas',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('etapa', models.CharField(default='1', max_length=1, verbose_name='Etapa')),
                ('name', models.CharField(default='Ideias', max_length=100, verbose_name='Nome da etapa')),
                ('header_txt', models.TextField(default='null', verbose_name='Cabe\xe7alho')),
                ('objetivo_txt', models.TextField(default='null', verbose_name='Objetivo')),
                ('participar_txt', models.TextField(default='null', verbose_name='Como participar')),
                ('resultado_txt', models.TextField(default='null', verbose_name='Resultado')),
            ],
        ),
        migrations.CreateModel(
            name='MeuEspaco',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('projeto', models.CharField(max_length=100, verbose_name='Projeto')),
                ('user', models.CharField(blank=True, max_length=200, verbose_name='Usuario')),
                ('categoria', models.CharField(blank=True, max_length=50, verbose_name='Categoria')),
                ('publ_date', models.DateTimeField(verbose_name='Data de publica\xe7\xe3o')),
                ('link', models.URLField(blank=True, max_length=1000)),
                ('comentario', models.CharField(blank=True, max_length=1000, verbose_name='Coment\xe1rio')),
                ('secao', models.CharField(blank=True, max_length=30, verbose_name='Se\xe7\xe3o')),
                ('arquivo', models.FileField(blank=True, max_length=2000000, upload_to=b'C:\\virtual-agora\\media')),
            ],
        ),
        migrations.CreateModel(
            name='Projeto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('projeto', models.CharField(blank=True, max_length=100, null=True, verbose_name='Projeto')),
                ('sigla', models.CharField(blank=True, max_length=50, null=True, verbose_name='Sigla')),
                ('etapa', models.CharField(default='1', max_length=1, verbose_name='Etapa')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_type', models.CharField(choices=[('1', 'One choice'), ('2', 'Multipla Escolha'), ('3', 'Texto')], max_length=1, verbose_name='Tipo')),
                ('question_text', models.CharField(max_length=200, verbose_name='T\xedtulo da Quest\xe3o')),
                ('publ_date', models.DateTimeField(verbose_name='Data de publica\xe7\xe3o')),
                ('exp_date', models.DateTimeField(verbose_name='Data de expira\xe7\xe3o')),
                ('days', models.IntegerField(choices=[(1, '1 dia'), (7, '1 semana'), (30, '1 m\xeas'), (365, '1 ano'), (3650, 'Indeterminado')], default=3650, verbose_name='Tempo para expirar')),
                ('question_status', models.CharField(choices=[('n', 'N\xe3o publicado'), ('p', 'Publicado')], default='n', max_length=1, verbose_name='Estado da quest\xe3o')),
                ('answer_status', models.CharField(choices=[('n', 'N\xe3o publicado'), ('p', 'Publicado')], default='n', max_length=1, verbose_name='Estado da resposta')),
                ('image', models.ImageField(blank=True, null=True, upload_to='question_images', verbose_name='Imagem')),
                ('address', models.CharField(max_length=200, verbose_name='Endere\xe7o')),
                ('permissao', models.IntegerField(default=0)),
                ('resultado', models.CharField(choices=[('n', 'N\xe3o publicado'), ('p', 'Publicado')], default='n', max_length=1)),
                ('projeto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='agoraunicamp.Projeto')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'verbose_name': 'quest\xe3o',
                'verbose_name_plural': 'quest\xf5es',
            },
        ),
        migrations.CreateModel(
            name='Relatorio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('1', 'Geral'), ('2', 'Quest\xe3o')], default='1', max_length=10)),
                ('titulo', models.CharField(max_length=100)),
                ('conteudo', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Resultado e An\xe1lise')),
                ('publ_date', models.DateTimeField(null=True)),
                ('destaque', models.CharField(default='N\xe3o', max_length=3)),
                ('address', models.CharField(max_length=200)),
                ('published', models.CharField(default='N\xe3o', max_length=3)),
                ('publhistorico', models.CharField(default='N\xe3o', max_length=3)),
                ('like', models.IntegerField(default=0)),
                ('dislike', models.IntegerField(default=0)),
                ('projeto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='agoraunicamp.Projeto')),
                ('questao', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='agoraunicamp.Question')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
        migrations.CreateModel(
            name='Termo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('condition', models.CharField(default='Nao', max_length=10, verbose_name='Condi\xe7\xe3o')),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='T\xedtulo')),
                ('text', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Texto')),
                ('publ_date', models.DateTimeField(verbose_name='Data de publica\xe7\xe3o')),
                ('published', models.CharField(default='N\xe3o', max_length=3, verbose_name='Publicado?')),
                ('projeto', models.ForeignKey(max_length=50, on_delete=django.db.models.deletion.CASCADE, to='agoraunicamp.Projeto')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'verbose_name': 'debate',
                'verbose_name_plural': 'debates',
            },
        ),
        migrations.CreateModel(
            name='TopicAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='')),
                ('answer_date', models.DateTimeField(editable=False)),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='agoraunicamp.Topic')),
            ],
            options={
                'verbose_name': 'comentario',
                'verbose_name_plural': 'comentarios',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('primeiro_nome', models.CharField(blank=True, max_length=40, verbose_name='Primeiro nome')),
                ('ultimo_nome', models.CharField(blank=True, max_length=100, verbose_name='Sobrenome')),
                ('staff', models.CharField(blank=True, choices=[('1', 'Professor'), ('2', 'Funcionario'), ('3', 'Aluno-Graduacao'), ('4', 'Aluno-Mestrado'), ('5', 'Aluno-Doutorado'), ('6', 'Aluno-Especial'), ('7', 'Aluno-Lato'), ('8', 'outro')], max_length=1, verbose_name='Staff')),
                ('institute', models.CharField(blank=True, default='instituto', max_length=40, verbose_name='Instituto')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('nickname', models.CharField(blank=True, max_length=40, verbose_name='Apelido')),
                ('projeto', models.CharField(blank=True, max_length=40, verbose_name='Projeto')),
                ('question_answer', models.ManyToManyField(related_name='question_answer', through='agoraunicamp.Answer', to='agoraunicamp.Question')),
                ('topic_answer', models.ManyToManyField(related_name='topic_answer', through='agoraunicamp.TopicAnswer', to='agoraunicamp.Topic')),
            ],
            options={
                'verbose_name': 'usu\xe1rio',
                'verbose_name_plural': 'usu\xe1rios',
            },
        ),
        migrations.AddField(
            model_name='topicanswer',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='agoraunicamp.User'),
        ),
        migrations.AddField(
            model_name='termo',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_termo', to='agoraunicamp.User'),
        ),
        migrations.AddField(
            model_name='etapas',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='agoraunicamp.Projeto', verbose_name='Projeto'),
        ),
        migrations.AddField(
            model_name='choice',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='agoraunicamp.Question'),
        ),
        migrations.AddField(
            model_name='article',
            name='projeto',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='agoraunicamp.Projeto'),
        ),
        migrations.AddField(
            model_name='article',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='answer',
            name='choice',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='choice', to='agoraunicamp.Choice'),
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question', to='agoraunicamp.Question'),
        ),
        migrations.AddField(
            model_name='answer',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_answer', to='agoraunicamp.User'),
        ),
    ]
