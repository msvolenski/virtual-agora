# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2016-03-24 00:32
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
        ('taggit', '0002_auto_20150616_2121'),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True, max_length=200, null=True)),
                ('answer_date', models.DateTimeField(editable=False)),
            ],
            options={
                'verbose_name_plural': 'respostas',
                'verbose_name': 'resposta',
            },
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice_text', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name_plural': 'escolhas',
                'verbose_name': 'escolha',
            },
        ),
        migrations.CreateModel(
            name='InitialListQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Nome da lista')),
                ('select', models.IntegerField(default=0)),
                ('questions', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Questões')),
            ],
            options={
                'verbose_name_plural': 'Lista de Questões para o Home',
                'verbose_name': 'Lista de Questões para o Home',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('published', models.CharField(default='Não', max_length=3, verbose_name='Publicado?')),
                ('kind', models.CharField(choices=[('1', 'Conheça'), ('2', 'Resultados'), ('3', 'Comunidade'), ('4', 'Participe')], max_length=1, verbose_name='Tipo')),
                ('publ_date', models.DateTimeField(verbose_name='Data de publicação')),
                ('message', models.CharField(max_length=500, verbose_name='Recado')),
            ],
        ),
        migrations.CreateModel(
            name='MeuEspacoArtigo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(blank=True, max_length=200, verbose_name='Usuario')),
                ('categoria', models.CharField(blank=True, max_length=20, verbose_name='Categoria')),
                ('publ_date', models.DateTimeField(verbose_name='Data de publicação')),
                ('link', models.URLField(blank=True, max_length=1000)),
                ('comentario', models.CharField(blank=True, max_length=200, verbose_name='Comentário')),
                ('secao', models.CharField(blank=True, max_length=30, verbose_name='Seção')),
                ('arquivo', models.FileField(blank=True, max_length=20000, upload_to='C:\\virtual-agora\\media')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_type', models.CharField(choices=[('1', 'One choice'), ('2', 'Multipla Escolha'), ('3', 'Texto')], max_length=1, verbose_name='Tipo')),
                ('question_text', models.CharField(max_length=200, verbose_name='Título da Questão')),
                ('publ_date', models.DateTimeField(verbose_name='Data de publicação')),
                ('exp_date', models.DateTimeField(verbose_name='Data de expiração')),
                ('days', models.IntegerField(choices=[(1, '1 dia'), (7, '1 semana'), (30, '1 mês'), (365, '1 ano'), (3650, 'Indeterminado')], default=3650, verbose_name='Tempo para expirar')),
                ('question_status', models.CharField(choices=[('n', 'Não publicado'), ('p', 'Publicado')], default='p', max_length=1, verbose_name='Estado da questão')),
                ('answer_status', models.CharField(choices=[('n', 'Não publicado'), ('p', 'Publicado')], default='n', max_length=1, verbose_name='Estado da resposta')),
                ('image', models.ImageField(blank=True, null=True, upload_to='question_images', verbose_name='Imagem')),
                ('address', models.CharField(max_length=200, verbose_name='Endereço')),
                ('permissao', models.IntegerField(default=0)),
                ('resultado', models.CharField(choices=[('n', 'Não publicado'), ('p', 'Publicado')], default='n', max_length=1)),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'verbose_name_plural': 'questões',
                'verbose_name': 'questão',
            },
        ),
        migrations.CreateModel(
            name='Termo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('condition', models.CharField(default='Não', max_length=3, verbose_name='Condição')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('primeiro_nome', models.CharField(blank=True, max_length=40, verbose_name='Primeiro nome')),
                ('ultimo_nome', models.CharField(blank=True, max_length=100, verbose_name='Sobrenome')),
                ('staff', models.CharField(blank=True, choices=[('1', 'Professor'), ('2', 'Funcionário'), ('3', 'Aluno'), ('4', 'Outro')], max_length=1, verbose_name='Staff')),
                ('year_of_start', models.IntegerField(blank=True, default='9999', verbose_name='Ano de ingresso')),
                ('course', models.CharField(blank=True, default='curso', max_length=40, verbose_name='Curso')),
                ('institute', models.CharField(blank=True, default='instituto', max_length=40, verbose_name='Instituto')),
                ('academic_registry', models.IntegerField(default='9999', verbose_name='Registro acadêmico')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('nickname', models.CharField(blank=True, max_length=40, verbose_name='Apelido')),
                ('question_answer', models.ManyToManyField(related_name='question_answer', through='agora.Answer', to='agora.Question')),
            ],
            options={
                'verbose_name_plural': 'usuários',
                'verbose_name': 'usuário',
            },
        ),
        migrations.AddField(
            model_name='termo',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='agora.User'),
        ),
        migrations.AddField(
            model_name='choice',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='agora.Question'),
        ),
        migrations.AddField(
            model_name='answer',
            name='choice',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='agora.Choice'),
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='agora.Question'),
        ),
        migrations.AddField(
            model_name='answer',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='agora.User'),
        ),
    ]
